"use strict";
////////////////////////////////////////////////////////////////////////////
//
// Copyright 2024 Realm Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
////////////////////////////////////////////////////////////////////////////
Object.defineProperty(exports, "__esModule", { value: true });
exports.createDefaultPropertyAccessor = void 0;
const assert_1 = require("../assert");
/** @internal */
function createDefaultPropertyAccessor({ realm, typeHelpers: { fromBinding, toBinding }, columnKey, }) {
    return {
        get(obj) {
            try {
                return fromBinding(obj.getAny(columnKey));
            }
            catch (err) {
                assert_1.assert.isValid(obj);
                throw err;
            }
        },
        set(obj, value) {
            assert_1.assert.inTransaction(realm);
            try {
                if (!realm.isInMigration && obj.table.getPrimaryKeyColumn() === columnKey) {
                    throw new Error(`Cannot change value of primary key outside migration function`);
                }
                obj.setAny(columnKey, toBinding(value));
            }
            catch (err) {
                assert_1.assert.isValid(obj);
                throw err;
            }
        },
    };
}
exports.createDefaultPropertyAccessor = createDefaultPropertyAccessor;
//# sourceMappingURL=default.js.map